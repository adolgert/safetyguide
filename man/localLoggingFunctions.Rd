% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/logging.R
\name{localLoggingFunctions}
\alias{localLoggingFunctions}
\alias{logtrace}
\alias{logdebug}
\alias{loginfo}
\alias{logwarn}
\alias{logerror}
\alias{logfatal}
\title{Functions to emit logging messages.}
\usage{
logtrace(...)

logdebug(...)

loginfo(...)

logwarn(...)

logerror(...)

logfatal(...)
}
\arguments{
\item{message}{A vector of string arguments.}

\item{name}{An optional argument called which specifies that this
logging message is part of the overall package. This is used to
turn change logging level separately for a part of the package.}
}
\value{
Nothing is returned.
}
\description{
These functions accept a string and emit it through
logging mechanisms, either to the console or a file, as configured.
}
\details{
The functions emit at different levels, from most-detailed to
least-detailed: trace, debug, info, warn, error, fatal. An error
can be non-fatal if the application has fallback behavior. A warning
will show up in the log file. Info messages are meant for the user
during normal operation. Debug messages are normally off but are left
in the code. Trace messages are for automated processing, such as
entry and exit of functions. These are often not left in code.
None of the logging functions are exported from the package because they
are not meant for users. They are for use inside the package because
they use the package's logging namespace to emit messages.
}
